version: '3'

networks:
  web-shop:
    driver: bridge

services:
  shopping-cart:
    image: "condla/shopping-cart:1.1"
    container_name: shopping-cart
    ports:
      - "5555:5555"
    environment:
      SQLALCHEMY_DATABASE_URI: mariadb+mariadbconnector://root:myrootpassword@mariadb:3306/webshop
      OTEL_EXPORTER_OTLP_ENDPOINT: http://agent:4317
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - web-shop
 
  mariadb:
    image: mariadb:latest
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: myrootpassword
      MARIADB_DATABASE: webshop
    networks:
      - web-shop
    healthcheck:
#      test: ["mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-pmyrootpassword"]
      test: mysqladmin ping -h 127.0.0.1 -uroot -pmyrootpassword
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  agent:
    image: grafana/agent:latest
    ports:
      - "80"
      - "6832"
      - "55679"
      - "4317:4317"
      - "1234:1234"
    volumes:
      - ./config:/etc/config
      - /var/log:/var/log
    entrypoint:
      - /bin/agent
      - -config.file=/etc/config/agent.yaml
      - -prometheus.wal-directory=/tmp/agent/wal
    networks:
      - web-shop

  products:
    image: "condla/products:otel-1.0"
    container_name: products
    ports:
      - "8080:8080"
    environment:
      OTEL_METRICS_EXPORTER: "none"
      OTEL_EXPORTER: "otlp_span"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://agent:4317"
      OTEL_RESOURCE_ATTRIBUTES: "service.name=products,team.name=backend,environment=production"
      JAVA_OPTS: "-javaagent:/opentelemetry-javaagent.jar"
    networks:
      - web-shop
    depends_on:
      - "shopping-cart"
      - "broker"

  web-shop:
    image: "condla/web-shop:1.1"
    container_name: web-shop
    ports:
      - "3389:6666"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://agent:4317"
    depends_on:
      - "shopping-cart"
    networks:
      - web-shop
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - web-shop

  broker:
    image: confluentinc/cp-server:7.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CREATE_TOPICS: audit:1:1,networkevents:1:1,webserverlogs:1:1,dbcommits:1:1,machine1:1:1,machine2:1:1
      #KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      - web-shop
