server:
  log_level: debug

integrations:
  cadvisor:
    docker_only: true
    enabled: true
    instance: localhost:9090
    relabel_configs:
      - action: replace
        replacement: integrations/docker
        target_label: job
  node_exporter:
    enabled: true
    relabel_configs:
      - replacement: hostname
        target_label: instance
  mysqld_exporter:
    data_source_name: root@(localhost:3306)/
    enabled: true
    instance: mysql-01
    relabel_configs:
      - replacement: integrations/mysql
        source_labels:
          - __address__
        target_label: job
  prometheus_remote_write:
    - basic_auth:
        password: <password>
        username: <username>
      url: <url>

metrics:
  configs:
    - name: integrations
      remote_write:
        - basic_auth:
            password: <password>
            username: <username>
          url: <url>
  global:
    scrape_interval: 60s
  wal_directory: /tmp/grafana-agent-wal

logs:
  configs:
    - clients:
        - basic_auth:
            password: <password>
            username: <username>
          url: <url>
      name: integrations
      positions:
        filename: /tmp/positions.yaml
      scrape_configs:
        - job_name: integrations/mysql
          pipeline_stages:
            - regex:
                expression: (?P<timestamp>.+) (?P<thread>[\d]+) \[(?P<label>.+?)\](
                  \[(?P<err_code>.+?)\] \[(?P<subsystem>.+?)\])? (?P<msg>.+)
            - labels:
                ? err_code
                ? label
                ? subsystem
            - drop:
                drop_counter_reason: drop empty lines
                expression: ^ *$
          static_configs:
            - labels:
                __path__: /var/log/mysql/*.log
                instance: mysql-01
                job: integrations/mysql
        - docker_sd_configs:
            - host: unix:///var/run/docker.sock
              refresh_interval: 5s
          job_name: integrations/docker
          relabel_configs:
            - action: replace
              replacement: integrations/docker
              source_labels:
                - __meta_docker_container_id
              target_label: job
            - action: replace
              replacement: localhost:9090
              source_labels:
                - __meta_docker_container_id
              target_label: instance
            - regex: /(.*)
              source_labels:
                - __meta_docker_container_name
              target_label: container
            - source_labels:
                - __meta_docker_container_log_stream
              target_label: stream
        - job_name: integrations/node_exporter_journal_scrape
          journal:
            labels:
              instance: hostname
              job: integrations/node_exporter
            max_age: 24h
          relabel_configs:
            - source_labels:
                - __journal__systemd_unit
              target_label: unit
            - source_labels:
                - __journal__boot_id
              target_label: boot_id
            - source_labels:
                - __journal__transport
              target_label: transport
            - source_labels:
                - __journal_priority_keyword
              target_label: level
      target_config:
        sync_period: 10s

traces:
  configs:
  - name: latencyEndpoint
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    remote_write:
      - endpoint: <url>
        basic_auth:
          username: <username>
          password: <password>
    spanmetrics:
      dimensions:
        - name: http.method
        - name: http.target
        - name: team.name
      handler_endpoint: 0.0.0.0:1234
    automatic_logging:
      backend: logs_instance
      logs_instance_name: loki
      roots: true
      processes: true
      spans: true
      span_attributes:
        - http.method
        - http.target
        - http.status_code
      overrides:
        trace_id_key: "traceId"
